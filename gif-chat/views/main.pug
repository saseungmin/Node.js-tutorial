extends layout

block content
    h1 GIF 채팅방
    fieldset
        legend 채팅방 목록
        table
            thead
                tr
                    th 방 제목
                    th 종류
                    th 허용 인원
                    th 방장
            tbody
                for room in rooms
                    tr(data-id=room._id)
                        td= room.title
                        td= room.password ? '비밀방' : '공개방'
                        td= room.max
                        td(style='color:'+room.owner)=room.owner
                        -var passward = room.password ? 'true' : 'false';
                        td: button(data-password=passward data-id=room._id).join-btn 입장
    .error-message= error
    a(href="/room") 채팅방 생성
    script(src="/socket.io/socket.io.js")
    script.
        var socket = io.connect('http://localhost:8005/room', { // 서버에서 /room 네임스페이스로 보낸 데이터만 받을 수 있다.
            path: '/socket.io',
        });
        // 새 방(newRoom) 생성
        socket.on('newRoom', function (data) {
            var tr = document.createElement('tr');
            var td = document.createElement('td');
            td.textContent = data.title;
            tr.appendChild(td);

            td = document.createElement('td');
            td.textContent = data.password ? '비밀방' : '공개방';
            tr.appendChild(td);

            td = document.createElement('td');
            td.textContent = data.max;
            tr.appendChild(td);

            td = document.createElement('td');
            td.style.color = data.owner;
            td.textContent = data.owner;
            tr.appendChild(td);

            td = document.createElement('td');
            var button = document.createElement('button');
            button.textContent = '입장';
            button.dataset.password = data.password ? 'true' : 'false';
            button.dataset.id = data._id;
            button.addEventListener('click', addBtnEvent);
            td.appendChild(button);
            tr.appendChild(td);

            // tr dataset id 값
            tr.dataset.id = data._id;
            // tbody에 tr 붙히기
            document.querySelector('table tbody').appendChild(tr);
        });

        // 채팅 룸 삭제
        socket.on('removeRoom', function (data) {
            document.querySelectorAll('tbody tr').forEach(function (tr) {
                if (tr.dataset.id === data) {
                tr.parentNode.removeChild(tr);
                }
            });
        });

        function addBtnEvent(e) {
            if (e.target.dataset.password === 'true') {
                // 비번방
                const password = prompt('비밀번호를 입력하세요');
                location.href = '/room/' + e.target.dataset.id + '?password=' + password;
            } else {
                // 공개방
                location.href = '/room/' + e.target.dataset.id;
            }
        }

        // 입장
        document.querySelectorAll('.join-btn').forEach(function (btn) {
            btn.addEventListener('click', addBtnEvent);
        });

    